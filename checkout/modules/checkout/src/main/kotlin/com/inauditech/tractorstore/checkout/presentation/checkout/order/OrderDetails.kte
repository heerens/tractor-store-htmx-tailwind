@import com.inauditech.tractorstore.checkout.presentation.checkout.order.OrderForm
@import org.springframework.validation.BindingResult

@param orderForm: OrderForm 
@param errors: BindingResult? = null

!{ val hasErrors = errors != null && errors.hasErrors()}

<form id="hx-order-form">



    <h3 class="mb-8 text-xl">Personal Data</h3>

    <div class="mb-8 flex flex-wrap gap-x-16 gap-y-8">
        <div class="flex items-center gap-x-8">
            <label class="w-20" for="c_firstname">First name</label>
            <input value="${orderForm.firstName}"
                    class="border border-gray-300 rounded-xl h-10 shadow-inner shadow-lg px-2"
                    type="text"
                    id="c_firstname" name="firstName"
                    hx-post="/checkout/fragments/v1/orderform/validate"
                    hx-trigger="keyup delay:250ms"
                    hx-target="#hx-order-form"
            >
        </div>

        <div class="flex items-center gap-x-8">
            <label class="w-20" for="c_lastname">Last name</label>
            <input value="${orderForm.lastName}"
                   class="border border-gray-300 rounded-xl h-10 shadow-inner shadow-lg px-2"
                   type="text"
                   id="c_lastname"
                   name="lastName"
                   hx-post="/checkout/fragments/v1/orderform/validate"
                   hx-trigger="keyup delay:250ms"
                   hx-target="#hx-order-form"
            >
        </div>
    </div>

    @template.checkout.divider.line()

    <h3 class="mb-8 text-xl">Store Pickup</h3>

    <div class="mb-8 md:w-1/2">
        <script>
            document.body.addEventListener("storeSelected", function(evt){
                let input = document.getElementById("c_storeId");
                input.value = evt.detail.storeId;
                input.dispatchEvent(new Event('change'));
            })
        </script>
        @template.checkout.include.inculde(url = "/navigation/fragments/v1/storepicker" + (orderForm.storeId?.let { "?storeId=$it" } ?: "") )
    </div>

    <div class="mb-8 flex flex-wrap gap-x-16">
        <div class="flex items-center gap-x-8">
            <label class="w-20" for="c_storeId">Store ID</label>
            <input value="${orderForm.storeId}"
                   class="text-gray-500 border border-gray-300 rounded-xl h-10 shadow-inner shadow-lg px-2"
                   type="text"
                   id="c_storeId"
                   name="storeId"
                   hx-post="/checkout/fragments/v1/orderform/validate"
                   hx-trigger="change delay:250ms"
                   hx-target="#hx-order-form"
            >
        </div>
    </div>

    @template.checkout.divider.line()

    <div class="flex flex-wrap gap-x-48 gap-y-8 justify-end sm:justify-between sm:flex-row-reverse">
        <div hx-post="/checkout/fragments/v1/orderform" hx-target="#hx-order-form">
            @template.checkout.button.Button(label = "Place Order", style="primary", disabled = hasErrors || orderForm.empty())
        </div>
        <a href="/checkout/cart">
            @template.checkout.button.Button(label = "Back to Cart", style="secondary" )
        </a>
    </div>

</form>